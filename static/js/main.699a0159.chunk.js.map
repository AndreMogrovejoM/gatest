{"version":3,"sources":["AppOne.js","AppTwo.js","App.js","reportWebVitals.js","index.js"],"names":["AppOne","onClick","ReactGA","event","category","action","alert","AppTwo","App","useEffect","initialize","pageview","window","location","pathname","search","console","log","className","href","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAuBeA,MApBf,WAWE,OACE,6CAEE,uBACA,wBAAQC,QAdS,WACnBC,IAAQC,MAAM,CACZC,SAAU,SACVC,OAAQ,qCAEVC,MACE,6EAQA,uBCZSC,MAJf,WACE,OAAO,+CCkDMC,MA9Cf,WAqBE,OApBAC,qBAAU,WACRP,IAAQQ,WAAW,kBAEnBR,IAAQS,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,UAC3D,IAEHN,qBAAU,WACRO,QAAQC,IAAIL,OAAOC,SAASC,aAc5B,qBAAKI,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,wBAAQjB,QAbO,WACnBC,IAAQC,MAAM,CACZC,SAAU,SACVC,OAAQ,qCAEVC,MACE,6EAOE,mBACA,eAAC,IAAD,WACE,mBAAGa,KAAK,UAAR,oBACA,uBACA,mBAAGA,KAAK,UAAR,oBACA,uBACA,uBAEA,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAlB,UACE,cAAC,EAAD,IAAe,OAEjB,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,UACE,cAAC,EAAD,IAAe,mBChCdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.699a0159.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nfunction AppOne() {\r\n  const ClickHandler = () => {\r\n    ReactGA.event({\r\n      category: \"Button\",\r\n      action: \"Click the button from first page\",\r\n    });\r\n    alert(\r\n      \"Send the information to google analystic that I touched the click button\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      First Page\r\n      <br />\r\n      <button onClick={ClickHandler}>Click</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppOne;\r\n","import React from \"react\";\r\n\r\nfunction AppTwo() {\r\n  return <div>Second Page</div>;\r\n}\r\n\r\nexport default AppTwo;\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport AppOnePage from \"./AppOne\";\nimport AppTwoPage from \"./AppTwo\";\nimport ReactGA from \"react-ga\";\n\nfunction App() {\n  useEffect(() => {\n    ReactGA.initialize(\"UA-211919696-1\");\n    // To Report Page View\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, []);\n\n  useEffect(() => {\n    console.log(window.location.pathname);\n  });\n\n  const ClickHandler = () => {\n    ReactGA.event({\n      category: \"Button\",\n      action: \"Click the button from first page\",\n    });\n    alert(\n      \"Send the information to google analystic that I touched the click button\"\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={ClickHandler}>Click</button>\n        <Router>\n          <a href=\"/appOne\">AppOne</a>\n          <br />\n          <a href=\"/appTwo\">AppTwo</a>\n          <br />\n          <br />\n\n          <Routes>\n            <Route exact path=\"/appOne\">\n              <AppOnePage />{\" \"}\n            </Route>\n            <Route exact path=\"/appTwo\">\n              <AppTwoPage />{\" \"}\n            </Route>\n          </Routes>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}