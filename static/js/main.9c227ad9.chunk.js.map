{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ga4react","GA4React","App","usestate","ga","setGA","useEffect","initialize","then","ga4","pageview","window","location","pathname","search","gtag","catch","err","console","log","className","onClick","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAIMA,EAAW,IAAIC,IAAS,gBAwCfC,MAtCf,WAAgB,IAAD,EACOC,qBADP,mBACNC,EADM,KACFC,EADE,KA6Bb,OAzBAC,qBAAU,WAERN,EACGO,aACAC,MAAK,SAACC,GAELA,EAAIC,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QACxDL,EAAIM,KAAK,QAAS,WAAY,QAC9BV,EAAMI,MAEPO,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,EAAK,2BAClC,IAeD,qBAAKG,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,wBAAQC,QAfO,WACnBjB,EAAGW,KACD,SACA,mCACAJ,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QAE7CQ,MACE,4EAEFJ,QAAQC,IAAI,iBAMR,wBC1BOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9c227ad9.chunk.js","sourcesContent":["import React, { usestate, useEffect } from \"react\";\nimport GA4React, { useGA4React } from \"ga-4-react\";\nimport \"./App.css\";\n\nconst ga4react = new GA4React(\"G-QC2JW90KEH\");\n\nfunction App() {\n  const [ga, setGA] = usestate();\n\n  //using useEffect to track pageviews with ga4react\n  useEffect(() => {\n    //initialize ga4react\n    ga4react\n      .initialize()\n      .then((ga4) => {\n        //track pageview\n        ga4.pageview(window.location.pathname + window.location.search);\n        ga4.gtag(\"event\", \"pageview\", \"path\"); // or your custom gtag event\n        setGA(ga4);\n      })\n      .catch((err) => console.log(err, \"Analytics Failure.\"));\n  }, []);\n\n  const ClickHandler = () => {\n    ga.gtag(\n      \"Button\",\n      \"Click the button from first page\",\n      window.location.pathname + window.location.search\n    );\n    alert(\n      \"Send the information to google analystic that I touched the click button\"\n    );\n    console.log(\"Event Button\");\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={ClickHandler}>Click</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}